version: "3"

services:
  app:
    build:
      context: .
    command: bash -c 'while !</dev/tcp/psql/5432; do sleep 1; done; python manage.py collectstatic --no-input; python manage.py migrate; python manage.py loaddata crm/fixtures/dev.json; gunicorn --bind 0.0.0.0:8000 crm.wsgi'
    volumes:
      - static:/static
      - .:/app/
    environment:
      SECRET_KEY: ${SECRET_KEY}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - psql
      - redis
    restart: on-failure

  psql:
    image: postgres:11-alpine
    expose:
      - 5432
    volumes:
      - "psql_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U mailing" ]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis:alpine
    expose:
      - 6379
    volumes:
      - "redis_data:/data"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30


  celery:
    build:
      context: .
    restart: on-failure
    command: celery -A crm worker -l info
    volumes:
      - .:/app/
    depends_on:
      - redis
      - app

  nginx:
    command: nginx -g 'daemon off;'
    image: nginx:alpine
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static:/static
    ports:
      - "8000:8000"

volumes:
  psql_data:
  static:
  redis_data:
    external: false